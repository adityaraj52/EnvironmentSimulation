<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">

    <!-- http://stackoverflow.com/questions/23110212/transforming-one-jaxb-object-to-another-using-xslt -->

    <xs:element name="query">
        <xs:annotation>
            <xs:documentation>filter structure</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="filter" maxOccurs="unbounded" type="ifilter_expression"/>
                <xs:element name="polynomial" type="ipolynomial"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>




    <xs:complexType name="ifilter_expression" final="#all">
        <xs:annotation>
            <xs:documentation>full filter expression</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="item" type="ifilter_item"/>
        </xs:sequence>
    </xs:complexType>




    <xs:complexType name="ifilter_item" final="#all">
        <xs:annotation>
            <xs:documentation>defines a single filter item</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="key" type="iosmkey"> </xs:element>
            <xs:element name="r_operator" default="equals" type="ioperator_relational"> </xs:element>
            <xs:element name="value" default="*"/>
        </xs:all>
        <xs:attribute name="operator" type="ioperator_boolean"> </xs:attribute>
    </xs:complexType>




    <xs:simpleType name="ioperator_relational" final="restriction">
        <xs:annotation>
            <xs:documentation>relational operator for connectingkey_and_value_of_a_filter</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="equals"/>
            <xs:enumeration value="not equals"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ioperator_boolean" final="restriction">
        <xs:annotation>
            <xs:documentation>boolean_operator for connection different filters</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="and"/>
            <xs:enumeration value="or"/>
            <xs:enumeration value="xor"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="iosmkey" final="restriction">
        <xs:annotation>
            <xs:documentation>filter elements for OSM structures</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="highway"/>
            <xs:enumeration value="tourism"/>
            <xs:enumeration value="building"/>
            <xs:enumeration value="shop"/>
            <xs:enumeration value="waterways"/>
            <xs:enumeration value="railways"/>
            <xs:enumeration value="junction"/>
            <xs:enumeration value="junction"/>
        </xs:restriction>
    </xs:simpleType>




    <xs:complexType name="ipolynomial" final="#all">
        <xs:annotation>
            <xs:documentation>polynomial defines the border structure for reading
                data</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="rectangle">
                <xs:annotation>
                    <xs:documentation>bounding box that is decribed by the upper-left and
                        lower-right corner</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="lefttop">
                            <xs:complexType>
                                <xs:attributeGroup ref="gps"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="bottomright">
                            <xs:complexType>
                                <xs:attributeGroup ref="gps"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="circle">
                <xs:annotation>
                    <xs:documentation>defines a circle around a coordinate in
                        meter</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="centre">
                            <xs:complexType>
                                <xs:attributeGroup ref="gps"/>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="radius">
                            <xs:simpleType>
                                <xs:restriction base="xs:double">
                                    <xs:minInclusive value="0"/>
                                </xs:restriction>
                            </xs:simpleType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="list">
                <xs:annotation>
                    <xs:documentation>defines a list of coordinates to describe a closed
                        polynomial</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded" minOccurs="3">
                        <xs:element name="position">
                            <xs:complexType>
                                <xs:attributeGroup ref="gps"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>




    <xs:attributeGroup name="gps">
        <xs:annotation>
            <xs:documentation>attribute definition for GPS data</xs:documentation>
        </xs:annotation>
        <xs:attribute name="latitude" use="required">
            <xs:annotation>
                <xs:documentation>latitude value (positive values = east, negativ values =
                    west)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:double"/>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="longitude" use="required">
            <xs:annotation>
                <xs:documentation>longitude value (positive values = north, negative values =
                    south)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:double"/>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>

</xs:schema>
